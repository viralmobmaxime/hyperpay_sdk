#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 6.0 effective-5.10 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)
#ifndef OPPWAMOBILE_SWIFT_H
#define OPPWAMOBILE_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wnon-modular-include-in-framework-module"
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#pragma clang diagnostic pop
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreFoundation;
@import Foundation;
@import ObjectiveC;
@import PassKit;
@import UIKit;
#endif

#import <OPPWAMobile/OPPWAMobile.h>

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"
#pragma clang diagnostic ignored "-Wunsafe-buffer-usage"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="OPPWAMobile",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class NSURLRequest;
@class NSData;
@class NSURLResponse;

SWIFT_PROTOCOL("_TtP11OPPWAMobile17NetworkExecutable_")
@protocol NetworkExecutable
- (void)executeWithRequest:(NSURLRequest * _Nonnull)request completion:(void (^ _Nonnull)(NSData * _Nullable, NSURLResponse * _Nullable, NSError * _Nullable))completion;
@end


SWIFT_CLASS("_TtC11OPPWAMobile15NetworkExecutor")
@interface NetworkExecutor : NSObject <NetworkExecutable>
- (void)executeWithRequest:(NSURLRequest * _Nonnull)request completion:(void (^ _Nonnull)(NSData * _Nullable, NSURLResponse * _Nullable, NSError * _Nullable))completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSString;
@class NSIndexSet;
@class NetworkResponse;

SWIFT_PROTOCOL("_TtP11OPPWAMobile27NetworkResponseSerializable_")
@protocol NetworkResponseSerializable
@property (nonatomic, readonly, copy) NSSet<NSString *> * _Nonnull acceptableContentTypes;
@property (nonatomic, readonly, copy) NSIndexSet * _Nonnull acceptableStatusCodes;
- (NSError * _Nullable)validateResponse:(NSURLResponse * _Nullable)response data:(NSData * _Nullable)data SWIFT_WARN_UNUSED_RESULT;
- (NetworkResponse * _Nonnull)responseWithData:(NSData * _Nullable)data urlResponse:(NSURLResponse * _Nullable)urlResponse SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC11OPPWAMobile29NetworkHTMLResponseSerializer")
@interface NetworkHTMLResponseSerializer : NSObject <NetworkResponseSerializable>
@property (nonatomic, readonly, copy) NSSet<NSString *> * _Nonnull acceptableContentTypes;
@property (nonatomic, readonly, copy) NSIndexSet * _Nonnull acceptableStatusCodes;
- (NSError * _Nullable)validateResponse:(NSURLResponse * _Nullable)response data:(NSData * _Nullable)data SWIFT_WARN_UNUSED_RESULT;
- (NetworkResponse * _Nonnull)responseWithData:(NSData * _Nullable)data urlResponse:(NSURLResponse * _Nullable)urlResponse SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11OPPWAMobile30NetworkImageResponseSerializer")
@interface NetworkImageResponseSerializer : NSObject <NetworkResponseSerializable>
@property (nonatomic, readonly, copy) NSSet<NSString *> * _Nonnull acceptableContentTypes;
@property (nonatomic, readonly, copy) NSIndexSet * _Nonnull acceptableStatusCodes;
- (NSError * _Nullable)validateResponse:(NSURLResponse * _Nullable)response data:(NSData * _Nullable)data SWIFT_WARN_UNUSED_RESULT;
- (NetworkResponse * _Nonnull)responseWithData:(NSData * _Nullable)data urlResponse:(NSURLResponse * _Nullable)urlResponse SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

enum NetworkRequestContentType : NSInteger;
@class NSURL;
enum NetworkServiceMethod : NSInteger;

SWIFT_PROTOCOL("_TtP11OPPWAMobile26NetworkRequestSerializable_")
@protocol NetworkRequestSerializable
@property (nonatomic, readonly) enum NetworkRequestContentType contentType;
- (NSURLRequest * _Nullable)getUrlRequestWithApi:(NSString * _Nonnull)api baseUrl:(NSURL * _Nullable)baseUrl method:(enum NetworkServiceMethod)method parameters:(NSDictionary<NSString *, id> * _Nonnull)parameters headers:(NSDictionary<NSString *, NSString *> * _Nonnull)headers error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC11OPPWAMobile28NetworkJSONRequestSerializer")
@interface NetworkJSONRequestSerializer : NSObject <NetworkRequestSerializable>
@property (nonatomic, readonly) enum NetworkRequestContentType contentType;
- (NSURLRequest * _Nullable)getUrlRequestWithApi:(NSString * _Nonnull)api baseUrl:(NSURL * _Nullable)baseUrl method:(enum NetworkServiceMethod)method parameters:(NSDictionary<NSString *, id> * _Nonnull)parameters headers:(NSDictionary<NSString *, NSString *> * _Nonnull)headers error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11OPPWAMobile29NetworkJSONResponseSerializer")
@interface NetworkJSONResponseSerializer : NSObject <NetworkResponseSerializable>
@property (nonatomic, readonly, copy) NSSet<NSString *> * _Nonnull acceptableContentTypes;
@property (nonatomic, readonly, copy) NSIndexSet * _Nonnull acceptableStatusCodes;
- (NSError * _Nullable)validateResponse:(NSURLResponse * _Nullable)response data:(NSData * _Nullable)data SWIFT_WARN_UNUSED_RESULT;
- (NetworkResponse * _Nonnull)responseWithData:(NSData * _Nullable)data urlResponse:(NSURLResponse * _Nullable)urlResponse SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP11OPPWAMobile13NetworkLogger_")
@protocol NetworkLogger
- (void)logRequest:(NSURLRequest * _Nullable)request;
- (void)logResponse:(NSURLResponse * _Nullable)response;
@end


SWIFT_CLASS("_TtC11OPPWAMobile14NetworkManager")
@interface NetworkManager : NSObject
- (nonnull instancetype)initWithLogger:(id <NetworkLogger> _Nullable)logger requestSerializer:(id <NetworkRequestSerializable> _Nonnull)requestSerializer responseSerializer:(id <NetworkResponseSerializable> _Nonnull)responseSerializer networkExecutor:(id <NetworkExecutable> _Nonnull)networkExecutor OBJC_DESIGNATED_INITIALIZER;
- (void)executeWithApi:(NSString * _Nonnull)api baseUrl:(NSURL * _Nullable)baseUrl method:(enum NetworkServiceMethod)method parameters:(NSDictionary<NSString *, id> * _Nonnull)parameters headers:(NSDictionary<NSString *, NSString *> * _Nonnull)headers completion:(void (^ _Nonnull)(id _Nullable, NSError * _Nullable))completion;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, NetworkRequestContentType, open) {
  NetworkRequestContentTypeJson = 0,
  NetworkRequestContentTypeUrl = 1,
};



SWIFT_CLASS("_TtC11OPPWAMobile24NetworkRequestSerializer")
@interface NetworkRequestSerializer : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong, getter=default) id <NetworkRequestSerializable> _Nonnull default_;)
+ (id <NetworkRequestSerializable> _Nonnull)default SWIFT_WARN_UNUSED_RESULT;
+ (id <NetworkRequestSerializable> _Nonnull)serializerWithContentType:(enum NetworkRequestContentType)contentType SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11OPPWAMobile15NetworkResponse")
@interface NetworkResponse : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, NetworkResponseContentType, open) {
  NetworkResponseContentTypeJson = 0,
  NetworkResponseContentTypeImage = 1,
  NetworkResponseContentTypeHtml = 2,
};



SWIFT_CLASS("_TtC11OPPWAMobile25NetworkResponseSerializer")
@interface NetworkResponseSerializer : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong, getter=default) id <NetworkResponseSerializable> _Nonnull default_;)
+ (id <NetworkResponseSerializable> _Nonnull)default SWIFT_WARN_UNUSED_RESULT;
+ (id <NetworkResponseSerializable> _Nonnull)serializerWithContentType:(enum NetworkResponseContentType)contentType SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, NetworkServiceMethod, open) {
  NetworkServiceMethodGet = 0,
  NetworkServiceMethodPost = 1,
};


SWIFT_CLASS("_TtC11OPPWAMobile27NetworkURLRequestSerializer")
@interface NetworkURLRequestSerializer : NSObject <NetworkRequestSerializable>
@property (nonatomic, readonly) enum NetworkRequestContentType contentType;
- (NSURLRequest * _Nullable)getUrlRequestWithApi:(NSString * _Nonnull)api baseUrl:(NSURL * _Nullable)baseUrl method:(enum NetworkServiceMethod)method parameters:(NSDictionary<NSString *, id> * _Nonnull)parameters headers:(NSDictionary<NSString *, NSString *> * _Nonnull)headers error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile15OPPAddressCodes")
@interface OPPAddressCodes : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kCountryCodeUSA;)
+ (NSString * _Nonnull)kCountryCodeUSA SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kCountryCodeCanada;)
+ (NSString * _Nonnull)kCountryCodeCanada SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<NSString *> * _Nonnull)getCountries SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<NSString *> * _Nonnull)getUsStates SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<NSString *> * _Nonnull)getCaStates SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nullable)getCountryNameWithCode:(NSString * _Nonnull)countryCode SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nullable)getCountryCodeWithName:(NSString * _Nonnull)name SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nullable)getStateNameWithCode:(NSString * _Nonnull)stateCode countryCode:(NSString * _Nonnull)countryCode SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nullable)getStateCodeWithName:(NSString * _Nonnull)state countryCode:(NSString * _Nonnull)countryCode SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isCountryCodeIsValid:(NSString * _Nonnull)countryCode SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// This class represents the affirm configration in checkout info.
SWIFT_CLASS("_TtC11OPPWAMobile15OPPAffirmConfig")
@interface OPPAffirmConfig : NSObject
/// Public key required for affirm object configuration.
@property (nonatomic, readonly, copy) NSString * _Nonnull publicKey;
/// Indicates active VCN configuration.
@property (nonatomic, readonly) BOOL isActive;
/// Creates affirm object.
- (nonnull instancetype)initWithPublicKey:(NSString * _Nonnull)publicKey isActive:(BOOL)isActive OBJC_DESIGNATED_INITIALIZER;
/// To do equality check on configuration object.
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Class to encapsulate all necessary transaction parameters for performing affirm transaction.
SWIFT_CLASS("_TtC11OPPWAMobile22OPPAffirmPaymentParams")
@interface OPPAffirmPaymentParams : OPPPaymentParams
@property (nonatomic, copy) NSString * _Nullable token;
/// Create affirm payment parameters object.
+ (OPPAffirmPaymentParams * _Nullable)affirmPaymentParamsWithCheckoutId:(NSString * _Nonnull)checkoutId error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// :nodoc:
- (id _Nonnull)copy SWIFT_WARN_UNUSED_RESULT;
/// :nodoc:
- (NSDictionary * _Nonnull)dictionaryForExecutingTransaction SWIFT_WARN_UNUSED_RESULT;
- (nullable instancetype)initWithCheckoutID:(NSString * _Nonnull)checkoutID paymentBrand:(NSString * _Nullable)paymentBrand error:(NSError * _Nullable * _Nullable)error OBJC_DESIGNATED_INITIALIZER;
@end


@interface OPPAffirmProcessor (SWIFT_EXTENSION(OPPWAMobile))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull NIL_AFFIRM_CHECKOUT_CONFIG;)
+ (NSString * _Nonnull)NIL_AFFIRM_CHECKOUT_CONFIG SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull NIL_CHECKOUT_DATA;)
+ (NSString * _Nonnull)NIL_CHECKOUT_DATA SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull NIL_AFFIRM_CHECKOUT_DATA;)
+ (NSString * _Nonnull)NIL_AFFIRM_CHECKOUT_DATA SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull NIL_AFFIRM_CHECKOUT_VIEW;)
+ (NSString * _Nonnull)NIL_AFFIRM_CHECKOUT_VIEW SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull SHOPPER_CANCELED_TRANSACTION;)
+ (NSString * _Nonnull)SHOPPER_CANCELED_TRANSACTION SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull CHECKOUT_CANCELED_WITH_REASON;)
+ (NSString * _Nonnull)CHECKOUT_CANCELED_WITH_REASON SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AFFIRM_SDK_IS_NOT_LOADED;)
+ (NSString * _Nonnull)AFFIRM_SDK_IS_NOT_LOADED SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull INVALID_UNIT_PRICE;)
+ (NSString * _Nonnull)INVALID_UNIT_PRICE SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull INVALID_CHECKOUT_AMOUNT;)
+ (NSString * _Nonnull)INVALID_CHECKOUT_AMOUNT SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull INVALID_DISCOUNT_AMOUNT;)
+ (NSString * _Nonnull)INVALID_DISCOUNT_AMOUNT SWIFT_WARN_UNUSED_RESULT;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile16OPPAnalyticsData")
@interface OPPAnalyticsData : NSObject
+ (NSString * _Nonnull)getOS SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nullable)getRedShieldBlackbox SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getMSDKVersion SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getDeviceModel SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// :nodoc:
typedef SWIFT_ENUM(NSInteger, OPPAnalyticsDataIntegrationType, open) {
  OPPAnalyticsDataIntegrationTypeCustom = 0,
  OPPAnalyticsDataIntegrationTypeCheckoutUI = 1,
  OPPAnalyticsDataIntegrationTypeDropInButton = 2,
};

@class PKPaymentRequest;
@class OPPCheckoutInfo;
@class PKPaymentAuthorizationViewController;
@class OPPApplePayRequestAuthorizationResult;
@class PKPaymentAuthorizationResult;
@class OPPApplePayRequestShippingContactUpdate;
@class PKPaymentRequestShippingContactUpdate;
@class OPPApplePayRequestShippingMethodUpdate;
@class PKPaymentRequestShippingMethodUpdate;

/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile15OPPApplePayUtil")
@interface OPPApplePayUtil : NSObject
+ (PKPaymentRequest * _Nullable)applePayPaymentRequestFor:(PKPaymentRequest * _Nullable)request and:(OPPCheckoutInfo * _Nullable)checkoutInfo SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)canSubmitApplePayRequestFor:(PKPaymentRequest * _Nullable)request SWIFT_WARN_UNUSED_RESULT;
+ (PKPaymentAuthorizationViewController * _Nullable)getApplePayViewControllerFor:(PKPaymentRequest * _Nonnull)request SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isRecurringPaymentRequestEnabledWith:(PKPaymentRequest * _Nullable)request SWIFT_WARN_UNUSED_RESULT;
+ (PKPaymentAuthorizationResult * _Nonnull)convertAuthorizationWithResult:(OPPApplePayRequestAuthorizationResult * _Nonnull)result SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(ios,introduced=11.0);
+ (PKPaymentRequestShippingContactUpdate * _Nonnull)convertShippingContactWithUpdate:(OPPApplePayRequestShippingContactUpdate * _Nonnull)update SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(ios,introduced=11.0);
+ (PKPaymentRequestShippingMethodUpdate * _Nonnull)convertShippingMethodWithUpdate:(OPPApplePayRequestShippingMethodUpdate * _Nonnull)update SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(ios,introduced=11.0);
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class OPPCardBrandInfo;

/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile12OPPBrandInfo")
@interface OPPBrandInfo : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull brand;
@property (nonatomic, readonly, copy) NSString * _Nonnull label;
@property (nonatomic, readonly, copy) NSString * _Nonnull renderType;
@property (nonatomic, strong) OPPCardBrandInfo * _Nullable cardBrandInfo;
@property (nonatomic) BOOL isCustomUiRequired;
- (nullable instancetype)initWithBrand:(NSString * _Nonnull)brand renderType:(NSString * _Nonnull)renderType label:(NSString * _Nonnull)label OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithBrand:(NSString * _Nonnull)brand json:(NSDictionary<NSString *, id> * _Nonnull)json;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile18OPPBrandsValidator")
@interface OPPBrandsValidator : NSObject
+ (BOOL)isCardBrand:(NSString * _Nonnull)paymentBrand SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getLabelForPaymentBrand:(NSString * _Nonnull)paymentBrand SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)hasCustomUiForPaymentBrand:(NSString * _Nonnull)paymentBrand SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<NSString *> * _Nonnull)getBrandsWithMissingUi SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

enum OPPCardBrandInfoCvvMode : NSInteger;

/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile16OPPCardBrandInfo")
@interface OPPCardBrandInfo : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull validationRegex;
@property (nonatomic, readonly, copy) NSString * _Nullable detectionRegex;
@property (nonatomic, readonly, copy) NSString * _Nonnull pattern;
@property (nonatomic) NSInteger cvvLength;
@property (nonatomic) BOOL isLuhnCheckRequired;
@property (nonatomic) BOOL isExpiryDateOptional;
@property (nonatomic) enum OPPCardBrandInfoCvvMode cvvMode;
@property (nonatomic) BOOL isMobilePhoneRequired;
- (nullable instancetype)initWithValidationRegex:(NSString * _Nonnull)validationRegex detectionRegex:(NSString * _Nullable)detectionRegex pattern:(NSString * _Nonnull)pattern OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithJson:(NSDictionary<NSString *, id> * _Nonnull)json;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// :nodoc:
typedef SWIFT_ENUM(NSInteger, OPPCardBrandInfoCvvMode, open) {
  OPPCardBrandInfoCvvModeNone = 0,
  OPPCardBrandInfoCvvModeRequired = 1,
  OPPCardBrandInfoCvvModeOptional = 2,
};


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile16OPPCardValidator")
@interface OPPCardValidator : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull OPPCardValidatorDefaultNumberRegex;)
+ (NSString * _Nonnull)OPPCardValidatorDefaultNumberRegex SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull OPPCardValidatorDefaultNumberPattern;)
+ (NSString * _Nonnull)OPPCardValidatorDefaultNumberPattern SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger OPPCardValidatorDefaultCVVLength;)
+ (NSInteger)OPPCardValidatorDefaultCVVLength SWIFT_WARN_UNUSED_RESULT;
+ (NSInteger)cvvLengthForPaymentBrand:(NSString * _Nonnull)paymentBrand SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<NSString *> * _Nonnull)paymentBrandsDetectedForCardNumber:(NSString * _Nonnull)cardNumber includeUnknown:(BOOL)includeUnknown SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)validateWithCardNumber:(NSString * _Nonnull)cardNumber paymentBrand:(NSString * _Nonnull)paymentBrand detectedBrands:(NSArray<NSString *> * _Nullable)detectedBrands SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)patternForCardNumberWithPaymentBrand:(NSString * _Nonnull)paymentBrand SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isExpiryDateOptionalForPaymentBrand:(NSString * _Nonnull)paymentBrand SWIFT_WARN_UNUSED_RESULT;
+ (enum OPPCardBrandInfoCvvMode)cvvModeForPaymentBrand:(NSString * _Nonnull)paymentBrand SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isMobilePhoneRequiredForPaymentBrand:(NSString * _Nonnull)paymentBrand SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nullable)detectionRegexForPaymentBrand:(NSString * _Nonnull)paymentBrand SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isPassingLuhnCheckWithCardNumber:(NSString * _Nonnull)cardNumber SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSLocale;

/// Class to encapsulate all necessary brand configurations required for Cash App Pay  transaction.
SWIFT_CLASS("_TtC11OPPWAMobile24OPPCashAppPayBrandConfig")
@interface OPPCashAppPayBrandConfig : OPPAfterpayConfig
/// Creates an object representing an Cash App Pay brand configuration.
- (nullable instancetype)initWithMinimumAmount:(NSString * _Nonnull)minimumAmount maximumAmount:(NSString * _Nonnull)maximumAmount currencyCode:(NSString * _Nonnull)currencyCode locale:(NSLocale * _Nonnull)locale consumerLocale:(NSLocale * _Nonnull)consumerLocale OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly) OPPPaymentBrand _Nonnull paymentBrand;
- (nullable instancetype)initWithWithMinimumAmount:(NSString * _Nonnull)minimumAmount maximumAmount:(NSString * _Nonnull)maximumAmount locale:(NSLocale * _Nonnull)locale consumerLocale:(NSLocale * _Nonnull)consumerLocale SWIFT_UNAVAILABLE;
@end


@interface OPPCashAppPayProcessor (SWIFT_EXTENSION(OPPWAMobile))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull FAILED_TO_SIGNING_ORDER_TOKEN;)
+ (NSString * _Nonnull)FAILED_TO_SIGNING_ORDER_TOKEN SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull FAILED_TO_SIGNING_ORDER_TOKEN_DUE_TO_INVALID_AMOUNT;)
+ (NSString * _Nonnull)FAILED_TO_SIGNING_ORDER_TOKEN_DUE_TO_INVALID_AMOUNT SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull FAILED_TO_SIGNING_ORDER_TOKEN_DUE_TO_INVALID_REDIRECT_URL;)
+ (NSString * _Nonnull)FAILED_TO_SIGNING_ORDER_TOKEN_DUE_TO_INVALID_REDIRECT_URL SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull FAILED_TO_SIGNING_ORDER_TOKEN_DUE_TO_JWT_DECODE_NULL;)
+ (NSString * _Nonnull)FAILED_TO_SIGNING_ORDER_TOKEN_DUE_TO_JWT_DECODE_NULL SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull FAILED_TO_SIGNING_ORDER_TOKEN_DUE_TO_DECODE_ERROR;)
+ (NSString * _Nonnull)FAILED_TO_SIGNING_ORDER_TOKEN_DUE_TO_DECODE_ERROR SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull FAILED_TO_SIGNING_ORDER_TOKEN_DUE_TO_JWT_DECODE_ERROR;)
+ (NSString * _Nonnull)FAILED_TO_SIGNING_ORDER_TOKEN_DUE_TO_JWT_DECODE_ERROR SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull FAILED_TO_SIGNING_ORDER_TOKEN_DUE_TO_HTTP_ERROR;)
+ (NSString * _Nonnull)FAILED_TO_SIGNING_ORDER_TOKEN_DUE_TO_HTTP_ERROR SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull FAILED_TO_SIGNING_ORDER_TOKEN_DUE_TO_SIGNIN_ERROR;)
+ (NSString * _Nonnull)FAILED_TO_SIGNING_ORDER_TOKEN_DUE_TO_SIGNIN_ERROR SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull CASH_APP_VALIDATION_FAILED;)
+ (NSString * _Nonnull)CASH_APP_VALIDATION_FAILED SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull CASH_APP_VALIDATION_FAILED_DUE_TO_NIL_DATA;)
+ (NSString * _Nonnull)CASH_APP_VALIDATION_FAILED_DUE_TO_NIL_DATA SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull CASH_APP_VALIDATION_FAILED_DUE_TO_DECODE_ERROR;)
+ (NSString * _Nonnull)CASH_APP_VALIDATION_FAILED_DUE_TO_DECODE_ERROR SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull CASH_APP_VALIDATION_FAILED_DUE_TO_UNKNOWN_ERROR;)
+ (NSString * _Nonnull)CASH_APP_VALIDATION_FAILED_DUE_TO_UNKNOWN_ERROR SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull CASH_APP_VALIDATION_FAILED_DUE_TO_INVALID_DATA;)
+ (NSString * _Nonnull)CASH_APP_VALIDATION_FAILED_DUE_TO_INVALID_DATA SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull CASH_APP_VALIDATION_FAILED_DUE_TO_HTTP_ERROR;)
+ (NSString * _Nonnull)CASH_APP_VALIDATION_FAILED_DUE_TO_HTTP_ERROR SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull CASH_APP_VALIDATION_FAILED_DUE_TO_VALIDATION_ERROR;)
+ (NSString * _Nonnull)CASH_APP_VALIDATION_FAILED_DUE_TO_VALIDATION_ERROR SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull CASH_APP_STATE_ERROR;)
+ (NSString * _Nonnull)CASH_APP_STATE_ERROR SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull CASH_APP_INTEGRATION_ERROR;)
+ (NSString * _Nonnull)CASH_APP_INTEGRATION_ERROR SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull CASH_APP_NETWORK_ERROR;)
+ (NSString * _Nonnull)CASH_APP_NETWORK_ERROR SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull CASH_APP_API_ERROR;)
+ (NSString * _Nonnull)CASH_APP_API_ERROR SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull CASH_APP_UNEXPECTED_ERROR;)
+ (NSString * _Nonnull)CASH_APP_UNEXPECTED_ERROR SWIFT_WARN_UNUSED_RESULT;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile23OPPCheckoutLocalization")
@interface OPPCheckoutLocalization : NSObject
@property (nonatomic, copy) NSString * _Nullable language;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) OPPCheckoutLocalization * _Nonnull sharedInstance;)
+ (OPPCheckoutLocalization * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (NSString * _Nonnull)viewControllerTitlePaymentMethodSelection SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)viewControllerTitlePaymentDetails SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)viewControllerTitleProcessing SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)viewControllerTitleAddress SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)alertTitleCardScanningFailed SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)labelTotalAmount SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)labelMBWayPushNotification SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)labelMBWayAcceptPin SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)labelTermsAndConditions SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)labelTermsAndConditionsAgreement SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)labelSwedish SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)labelFinnish SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)labelSTCPaySelectPaymentMethod SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)labelCardScanHoldHere SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)labelBlikTermsAndConditions SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)labelBlikRegulations SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)labelBlikTncUrl SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)messagePleaseWait SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)processingLabelForBlik SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)deviceAuthReason SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)buttonTitlePay SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)buttonTitlePayAmount SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)buttonTitleRegister SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)buttonTitleCancel SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)buttonTitleBack SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)buttonTitleDone SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)buttonTitleOK SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelCardHolderName SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelCreditCardNumber SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelExpiryDate SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelCVV SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelMobilePhoneNumber SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelBankAccountHolderName SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelIBAN SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelIBANOrAccountNumber SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelBICOrBankCode SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelSelectCountry SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelSelectBank SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelStorePaymentDetails SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelChooseCardType SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelNumberOfInstallments SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelEmail SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelQRCode SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelCountryCode SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelNationalIdentifier SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelAccountNumber SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelRoutingNumber SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelAccountVerification SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelDateOfBirth SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelOTP SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderCardHolderName SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderCardNumber SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderExpiryDate SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderCVV3Digits SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderCVV4Digits SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderBankAccountHolderName SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderIBAN SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderIBANOrAccountNumber SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderBICOrBankCode SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderMobilePhoneNumber SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderCountryCode SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderEmail SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderNationalIdentifier SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderAccountNumber SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderRoutingNumber SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderAccountVerification SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderStreet1 SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderStreet2 SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderCity SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderState SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderCounty SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderPostcode SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderOptional SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderDateOfBirth SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorCardHolderNameInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorCardNumberInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorCardExpiryDateInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorCardExpired SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorCardCVV3DigitsInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorCardCVV4DigitsInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorBankAccountHolderInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorIBANInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorIBANOrAccountNumberInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorRoutingNumberInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorBICOrBankCodeInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorEmailInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorMobilePhoneInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorCountryCodeInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorNationalIdentifierInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorAccountNumberInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorAccountExpiryDateInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorAccountExpired SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorAddressInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorDateOfBirthInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorBankCodeInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)paymentMethodGroupStored SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)paymentMethodGroupOther SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)paymentMethodGroupCards SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)titleForPaymentBrand:(NSString * _Nonnull)paymentBrand SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)accessibilityPayWith SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)accessibilityCancelCheckout SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)accessibilityScanCard SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)accessibilityPayWithStoredPaymentMethod SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderExpiryDateWeb SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderCVVWeb SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorCardExpiryDateInvalidWeb SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorCardCVVInvalidWeb SWIFT_WARN_UNUSED_RESULT;
/// returns localized string for deprecated key if actual key is not used yet
- (NSString * _Nonnull)localizedStringForDeprecatedKey:(NSString * _Nonnull)deprecatedKey actualKey:(NSString * _Nonnull)actualKey defaultValue:(NSString * _Nullable)defaultValue SWIFT_WARN_UNUSED_RESULT;
@end

@class OPPCheckoutSettings;
@class OPPPaymentProvider;
@class OPPTransaction;
@class OPPApplePayDelegate;
@class NSError;

/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile31OPPCheckoutSharedPaymentDetails")
@interface OPPCheckoutSharedPaymentDetails : NSObject
@property (nonatomic, strong) OPPCheckoutSettings * _Nullable checkoutSettings;
@property (nonatomic, copy) NSString * _Nullable checkoutID;
@property (nonatomic, strong) OPPCheckoutInfo * _Nullable checkoutInfo;
@property (nonatomic, copy) NSString * _Nullable paymentBrand;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable detectedBrandsPriority;
@property (nonatomic, strong) OPPPaymentProvider * _Nullable provider;
@property (nonatomic, copy) NSArray<OPPBrandInfo *> * _Nullable brandRules;
@property (nonatomic) BOOL isPaymentSchemeScreenEnabled;
@property (nonatomic) BOOL isCheckoutPresented;
@property (nonatomic) enum OPPAnalyticsDataIntegrationType integrationType;
@property (nonatomic, copy) void (^ _Nullable completeBlock)(OPPTransaction * _Nullable, NSError * _Nullable);
@property (nonatomic, copy) void (^ _Nullable canceledBlock)(void);
@property (nonatomic, copy) void (^ _Nullable loadingBlock)(BOOL);
@property (nonatomic, strong) OPPApplePayDelegate * _Nonnull applePayDelegate;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable configuredPaymentBrands;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) OPPCheckoutSharedPaymentDetails * _Nonnull sharedInstance;)
+ (OPPCheckoutSharedPaymentDetails * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// Call the complete block, setting the given transaction and error in the response.
- (void)callCompleteBlockWithTransaction:(OPPTransaction * _Nullable)transaction error:(NSError * _Nullable)error;
/// Call the canceled block.
- (void)callCanceledBlock;
/// Call the loading block.
- (void)callLoadingBlockInProgress:(BOOL)inProgress;
- (void)clear;
@end


/// A class that provides an interface to perform device authentication.
SWIFT_CLASS("_TtC11OPPWAMobile21OPPDeviceAuthProvider")
@interface OPPDeviceAuthProvider : NSObject
/// Checks if device authentication is enabled.
///
/// returns:
/// A boolean indicating whether device authentication is enabled.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL isDeviceAuthEnabled;)
+ (BOOL)isDeviceAuthEnabled SWIFT_WARN_UNUSED_RESULT;
/// Performs device authentication with a localized reason.
/// \param localizedReason A string that provides a reason for the authentication request.
///
/// \param completion A closure that is called with the result of the authentication request.
///
+ (void)performDeviceAuthenticationWithLocalizedReason:(NSString * _Nonnull)localizedReason completion:(void (^ _Nonnull)(BOOL))completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// :nodoc:
typedef SWIFT_ENUM(NSInteger, OPPFeatureSwitch, open) {
  OPPFeatureSwitchComponentUI = 0,
  OPPFeatureSwitchThreeDSFallbackDisabled = 1,
  OPPFeatureSwitchSwiftImplementation = 2,
};


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile23OPPFeatureSwitchChecker")
@interface OPPFeatureSwitchChecker : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) OPPFeatureSwitchChecker * _Nonnull shared;)
+ (OPPFeatureSwitchChecker * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (BOOL)isActivatedFor:(enum OPPFeatureSwitch)featureSwitch SWIFT_WARN_UNUSED_RESULT;
- (void)enableWithFeatureSwitch:(enum OPPFeatureSwitch)featureSwitch;
- (void)disableWithFeatureSwitch:(enum OPPFeatureSwitch)featureSwitch;
@end


/// Utilities to work with file system using C functions to avoid Checkmarx issues
SWIFT_CLASS("_TtC11OPPWAMobile11OPPFileUtil")
@interface OPPFileUtil : NSObject
/// Read NSData from specified path.
/// @param path Absolute path to the file.
/// @return Content of the file if path is valid, otherwise nil.
+ (NSData * _Nullable)readFromPath:(NSString * _Nonnull)path SWIFT_WARN_UNUSED_RESULT;
/// Write NSData to specified path.
/// @param data Data to be written to the file.
/// @param path Absolute path to the file.
+ (BOOL)writeWithData:(NSData * _Nonnull)data to:(NSString * _Nonnull)path SWIFT_WARN_UNUSED_RESULT;
/// Creates directory at specified path if it does not exist yet.
/// @param path Absolute path to the directory to be created.
+ (void)createDirectoryWithPath:(NSString * _Nonnull)path;
/// Removes file at specified path.
/// @param path Absolute path to the file.
+ (BOOL)removeFileAtPath:(NSString * _Nonnull)path SWIFT_WARN_UNUSED_RESULT;
/// Returns creation time if file is found, otherwise 0.
/// @param path Absolute path to the file.
+ (NSTimeInterval)fileCreationTimeAtPath:(NSString * _Nonnull)path SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Utilities to load files from the framework bundle
SWIFT_CLASS("_TtC11OPPWAMobile9OPPIOUtil")
@interface OPPIOUtil : NSObject
/// Checks which file name to enter when trying to load a nib file from the .framework
/// @param file The file name
/// @return An NSString that can be used in initWithNibNamed:
+ (NSString * _Nullable)nibPathForResource:(NSString * _Nonnull)fileName SWIFT_WARN_UNUSED_RESULT;
/// Checks which filename to enter when trying to load a file from the .framework
/// @param file The file name
/// @param type The file type
/// @return An NSString that can be used for loading e.g. via [UIImage imageNamed:]
+ (NSString * _Nullable)shortPathForResource:(NSString * _Nonnull)fileName type:(NSString * _Nonnull)type SWIFT_WARN_UNUSED_RESULT;
/// Checks which file name to enter when trying to load a file from the .framework
/// @param file The file name
/// @param type The file type
/// @return An NSString that can be used for loading e.g. via [NSDictionary dictionaryWithContentsOfFile:]
+ (NSString * _Nullable)pathForResource:(NSString * _Nonnull)fileName type:(NSString * _Nonnull)type SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIImage;

/// Shared image cache.
/// Stores images in fast memory cache and disk cache for specific period of time.
SWIFT_CLASS("_TtC11OPPWAMobile13OPPImageCache")
@interface OPPImageCache : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) OPPImageCache * _Nonnull shared;)
+ (OPPImageCache * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, copy) NSDictionary<NSString *, UIImage *> * _Nullable customImages;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (UIImage * _Nullable)imageForKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
@end


/// Class for managing asynchronous downloads of brand logos from the Server.
SWIFT_CLASS("_TtC11OPPWAMobile14OPPImageLoader")
@interface OPPImageLoader : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) OPPImageLoader * _Nonnull shared;)
+ (OPPImageLoader * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// imageURLs should be set before calling loading method.
/// @param URLs Map of logo URLs for payment brands.
- (void)addURLs:(NSDictionary<NSString *, NSURL *> * _Nonnull)URLs;
/// Checks if URL exists for specified payment brand.
/// @param paymentBrand Payment brand to check URL.
- (BOOL)hasURLForPaymentBrand:(NSString * _Nonnull)paymentBrand SWIFT_WARN_UNUSED_RESULT;
/// Loads logo for specified payment brand from the Server.
/// @param paymentBrand Payment brand to load the logo.
/// @param completion Completion block to be executed when download task returns result. Always called on main thread.
- (void)loadLogoForPaymentBrand:(NSString * _Nonnull)paymentBrand completion:(void (^ _Nonnull)(UIImage * _Nullable))completion;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile15OPPLibValidator")
@interface OPPLibValidator : NSObject
+ (BOOL)isThreeDSFrameworksLoaded SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isFraudForceLibLoaded SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isKlarnaInlineLibLoaded SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isAfterPayLibLoaded SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isCashAppPayLibLoaded SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isAffirmLibLoaded SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<NSString *> * _Nonnull)validLoadedLibs SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// :nodoc:
typedef SWIFT_ENUM(NSInteger, OPPLogLevel, open) {
  OPPLogLevelOff = 0,
  OPPLogLevelError = 100,
  OPPLogLevelWarning = 200,
  OPPLogLevelInfo = 300,
  OPPLogLevelDebug = 1000,
};

@class NSCoder;

/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile13OPPLogMessage")
@interface OPPLogMessage : NSObject <NSCoding>
@property (nonatomic) NSTimeInterval timestamp;
@property (nonatomic, readonly, copy) NSString * _Nonnull message;
@property (nonatomic, readonly) enum OPPLogLevel logLevel;
- (nullable instancetype)initWithMessage:(NSString * _Nonnull)message logLevel:(enum OPPLogLevel)logLevel checkoutID:(NSString * _Nonnull)checkoutID;
+ (nullable instancetype)logMessageWithMessage:(NSString * _Nonnull)message logLevel:(enum OPPLogLevel)logLevel checkoutID:(NSString * _Nonnull)checkoutID SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isEmpty SWIFT_WARN_UNUSED_RESULT;
- (enum OPPLogLevel)getLogLevel SWIFT_WARN_UNUSED_RESULT;
- (NSTimeInterval)getTimeStamp SWIFT_WARN_UNUSED_RESULT;
- (void)encodeWithCoder:(NSCoder * _Nonnull)coder;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol OPPLoggerServiceProtocol;

/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile9OPPLogger")
@interface OPPLogger : NSObject
+ (OPPLogger * _Nullable)sharedInstance:(id <OPPLoggerServiceProtocol> _Nullable)loggerService SWIFT_WARN_UNUSED_RESULT;
- (void)updateLogLevelWithString:(NSString * _Nullable)logLevelString;
- (void)logWithInfo:(NSString * _Nonnull)info properties:(NSDictionary<NSString *, id> * _Nullable)properties checkoutID:(NSString * _Nonnull)checkoutID mode:(OPPProviderMode)mode;
- (void)logWithWarning:(NSString * _Nonnull)warning checkoutID:(NSString * _Nonnull)checkoutID mode:(OPPProviderMode)mode;
- (void)logWithError:(NSError * _Nullable)error checkoutID:(NSString * _Nonnull)checkoutID mode:(OPPProviderMode)mode;
- (void)logWithDebug:(NSString * _Nonnull)debug properties:(NSDictionary<NSString *, id> * _Nullable)properties checkoutID:(NSString * _Nonnull)checkoutID mode:(OPPProviderMode)mode;
- (void)logWithRequest:(NSURLRequest * _Nonnull)request checkoutID:(NSString * _Nonnull)checkoutID mode:(OPPProviderMode)mode;
- (void)logWithResponse:(NSURLResponse * _Nonnull)response checkoutID:(NSString * _Nonnull)checkoutID mode:(OPPProviderMode)mode;
- (void)logConfiguredWithPaymentBrands:(NSArray<NSString *> * _Nonnull)paymentBrands checkoutID:(NSString * _Nonnull)checkoutID mode:(OPPProviderMode)mode;
- (void)logUnconfiguredWithPaymentBrand:(NSString * _Nonnull)paymentBrand checkoutID:(NSString * _Nonnull)checkoutID mode:(OPPProviderMode)mode;
- (void)logCheckoutStartedWithCheckoutID:(NSString * _Nonnull)checkoutID mode:(OPPProviderMode)mode;
- (void)logReplacingWithOldCheckoutID:(NSString * _Nonnull)oldCheckoutID with:(NSString * _Nonnull)newCheckoutID mode:(OPPProviderMode)mode;
- (void)sendLogs;
- (void)sendOldLogs;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface OPPLogger (SWIFT_EXTENSION(OPPWAMobile))
- (NSString * _Nonnull)lgf_integrationTypeString SWIFT_WARN_UNUSED_RESULT;
- (NSDictionary<NSString *, id> * _Nonnull)lgf_checkoutSettingsDictionaryWithSettings:(OPPCheckoutSettings * _Nonnull)settings SWIFT_WARN_UNUSED_RESULT;
@end



/// :nodoc:
SWIFT_PROTOCOL("_TtP11OPPWAMobile24OPPLoggerServiceProtocol_")
@protocol OPPLoggerServiceProtocol
- (void)sendLogWithMessages:(NSArray<OPPLogMessage *> * _Nonnull)messages checkoutID:(NSString * _Nonnull)checkoutID mode:(OPPProviderMode)mode :(void (^ _Nonnull)(BOOL))completionHandler;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile16OPPLoggerService")
@interface OPPLoggerService : NSObject <OPPLoggerServiceProtocol>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)sendLogWithMessages:(NSArray<OPPLogMessage *> * _Nonnull)messages checkoutID:(NSString * _Nonnull)checkoutID mode:(OPPProviderMode)mode :(void (^ _Nonnull)(BOOL))completionHandler;
@end



/// Utilities to get logos hard-coded in SDK
SWIFT_CLASS("_TtC11OPPWAMobile11OPPLogoUtil")
@interface OPPLogoUtil : NSObject
/// Returns the logo for the specified payment brand.
/// \param paymentBrand The payment brand to search the logo.
///
///
/// returns:
/// A logo image if found, otherwise nil.
+ (UIImage * _Nullable)logoForPaymentBrand:(OPPPaymentBrand _Nonnull)paymentBrand SWIFT_WARN_UNUSED_RESULT;
/// Returns the logo for the specified payment brand (or text representation if image not found).
/// \param paymentBrand The payment brand to search the logo.
///
/// \param viewSize View size to fit brand name as text into it.
///
///
/// returns:
/// A logo image if found, otherwise an image with payment brand name as text.
+ (UIImage * _Nonnull)logoForPaymentBrand:(OPPPaymentBrand _Nonnull)paymentBrand viewSize:(CGSize)viewSize SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UiCustomization;

/// Class that contains all possible configurations to be applied at <code>OPPThreeDSService</code> initialization phase.
SWIFT_CLASS("_TtC11OPPWAMobile16OPPThreeDSConfig")
@interface OPPThreeDSConfig : NSObject
/// Specific types of challenge interfaces.
/// They may vary for native way, e.g. present OTP or single select screen.
/// By default all UI types are supported, it’s strongly recommended by EMVCo.
@property (nonatomic) OPPThreeDSChallengeUiType challengeUiTypes;
/// The maximum amount of time (in minutes) for all exchanges for the 3-D Secure authentication.
/// Default value is 5 minutes.
@property (nonatomic) NSInteger sdkMaxTimeout;
/// The custom parameter for the /n software <code>Client</code> component.
/// See <a href="http://cdn.nsoftware.com/help/TS2/android/ClientConfig.htm" target="_blank"> /n software ClientConfig guide</a> for the keys.
/// Sample value <code>["AcceptAnyACSCert": "true"]</code>
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nonnull clientConfigParams;
/// The expected bundle identifier for the application.
@property (nonatomic, copy) NSString * _Nonnull appBundleID;
/// The string that represents the locale for the app’s user interface.
@property (nonatomic, copy) NSString * _Nullable locale;
/// The list of device parameters that should NOT be collected for the device.
/// By default, the SDK will pull as many device parameters as it can.
/// Refer to the “EMV® 3-D Secure SDK—Device Information” guide to see the full list of possible device parameters and appropriate constants to be used.
/// Sample values would be <code>["A001", "A002"]</code>.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable deviceParameterBlacklist;
/// UI configuration information that is used to specify the UI layout and theme of the challenge screens, for example, font style and font size.
@property (nonatomic, strong) UiCustomization * _Nonnull uiCustomization;
/// Merchant app URL used by Authentication app to call the Merchant app after OOB authentication has occurred.
@property (nonatomic, copy) NSString * _Nullable threeDSRequestorAppURL;
/// Creates an object representing configuration information to be applied at <code>OPPThreeDSService</code>.
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// :nodoc:
- (NSSet<NSString *> * _Nonnull)getClientConfig SWIFT_WARN_UNUSED_RESULT;
/// :nodoc:
- (NSDictionary<NSString *, NSString *> * _Nonnull)getUngroupedConfigParams SWIFT_WARN_UNUSED_RESULT;
@end


/// Class to represent all information needed to communicate securely with Directory Server (DS) and Access Control Server (ACS)
SWIFT_CLASS("_TtC11OPPWAMobile22OPPThreeDSSchemeConfig")
@interface OPPThreeDSSchemeConfig : NSObject
/// Directory Server ID.
@property (nonatomic, readonly, copy) NSString * _Nonnull dsRefId;
/// Public certificate provided by the DS to encrypt device data.
@property (nonatomic, readonly, copy) NSString * _Nonnull dsEncryptCert;
/// CA public certificate (root) of the DS-CA.
@property (nonatomic, readonly, copy) NSString * _Nonnull dsCaRootCert;
/// Creates an object representing information to connect to DS and ACS.
/// \param dsRefId Directory Server ID.
///
/// \param dsEncryptCert Public certificate provided by the DS to encrypt device data.
///
/// \param dsCaRootCert CA public certificate (root) of the DS-CA.
///
///
/// returns:
/// Returns an object representing information to connect to DS and ACS.
- (nonnull instancetype)initWithDsRefId:(NSString * _Nonnull)dsRefId dsEncryptCert:(NSString * _Nonnull)dsEncryptCert dsCaRootCert:(NSString * _Nonnull)dsCaRootCert OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIViewController;

/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile9OPPUIUtil")
@interface OPPUIUtil : NSObject
/// Finds and returns the top view controller on the screen
/// @return A top view controller on the screen
+ (UIViewController * _Nullable)findTopViewController SWIFT_WARN_UNUSED_RESULT;
/// Returns current interface orientation
/// @return current interface orientation
+ (UIInterfaceOrientation)interfaceOrientation SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isPortraitOrientation SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSNumber;
@class NSDate;

/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile7OPPUtil")
@interface OPPUtil : NSObject
/// Returns formatted amount depending on the currency
+ (NSString * _Nonnull)formattedAmountWithAmount:(NSNumber * _Nonnull)amount currencyCode:(NSString * _Nonnull)currencyCode SWIFT_WARN_UNUSED_RESULT;
/// Returns formatted numeric digits
+ (NSString * _Nullable)formattedNumericDigitsFor:(NSString * _Nonnull)digits SWIFT_WARN_UNUSED_RESULT;
/// Returns string with Whitespaces regarding pattern
+ (NSString * _Nonnull)addWhitespacesTo:(NSString * _Nonnull)text pattern:(NSString * _Nonnull)pattern SWIFT_WARN_UNUSED_RESULT;
/// Returns ‘YES’ if the character is from 0 to 9
+ (BOOL)isNumericDigit:(unichar)digit SWIFT_WARN_UNUSED_RESULT;
/// Returns ‘YES’ if the string consists only of numeric digits
+ (BOOL)isCardNumberFormattingAllowedWithCardNumber:(NSString * _Nonnull)cardNumber SWIFT_WARN_UNUSED_RESULT;
/// Returns ‘YES’ if the string matches the date with format
+ (BOOL)isDateValid:(NSString * _Nonnull)dateString withFormat:(NSString * _Nonnull)dateFormat SWIFT_WARN_UNUSED_RESULT;
/// Returns month from expiration date in ‘MM’ format
+ (NSString * _Nullable)cardExpirationMonthFrom:(NSString * _Nullable)expirationDate SWIFT_WARN_UNUSED_RESULT;
/// Returns year from expiration date in ‘YYYY’ format
+ (NSString * _Nullable)cardExpirationYearFrom:(NSString * _Nullable)expirationDate SWIFT_WARN_UNUSED_RESULT;
/// Return date from the string in the format
+ (NSDate * _Nullable)dateFrom:(NSString * _Nonnull)dateStr withFormat:(NSString * _Nullable)dateFormat SWIFT_WARN_UNUSED_RESULT;
/// Return string from the date in the format
+ (NSString * _Nullable)stringFrom:(NSDate * _Nullable)date withFormat:(NSString * _Nullable)dateFormat SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIColor;

/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile15OPPWebViewUtils")
@interface OPPWebViewUtils : NSObject
+ (BOOL)isFinalAsyncReachedWith:(NSString * _Nullable)redirectString shopperResultUrl:(NSString * _Nullable)shopperResultUrl SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)redirectUrlPresentWithRedirectString:(NSString * _Nullable)redirectString contain:(NSString * _Nullable)shopperResultUrl SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)redirectUrlPresentWithRedirectString:(NSString * _Nullable)redirectString conformsTo:(NSString * _Nonnull)pattern SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)colorToString:(UIColor * _Nonnull)color SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nullable)fileContentWithName:(NSString * _Nonnull)filename error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)boolToString:(BOOL)boolValue SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface PKPaymentRequest (SWIFT_EXTENSION(OPPWAMobile))
- (BOOL)updatePaymentRequestFor:(OPPProviderMode)mode tokenId:(NSString * _Nonnull)tokenId SWIFT_WARN_UNUSED_RESULT;
@end





@interface UIImageView (SWIFT_EXTENSION(OPPWAMobile))
/// Downloads logo asynchronously for specified payment brand.
/// Important: use loadImageForPaymentBrand:checkAccessibilityId: to load images in reusable elements like UITableViewCell.
/// @param paymentBrand Payment brand to load logo.
- (void)loadImageForPaymentBrand:(NSString * _Nonnull)paymentBrand;
/// Downloads logo asynchronously for specified payment brand.
/// Method updates an image only if accessibilityId was not changed while loading image.
/// This check is ignored if accessibilityId is nil.
/// @param paymentBrand Payment brand to load logo.
/// @param accessibilityId Accessibility identifier that will be set to the image view, and validated after asynchronous image loading.
- (void)loadImageForPaymentBrand:(NSString * _Nonnull)paymentBrand accessibilityId:(NSString * _Nullable)accessibilityId;
@end

@class UIFont;
@class OPPCheckoutTheme;

@interface UILabel (SWIFT_EXTENSION(OPPWAMobile))
- (void)configureWithTitle:(NSString * _Nonnull)title font:(UIFont * _Nonnull)font isHighLighted:(BOOL)isHighLighted theme:(OPPCheckoutTheme * _Nonnull)theme;
@end

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
